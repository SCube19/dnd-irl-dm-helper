/** @type {import('tailwindcss').Config} */
module.exports = {
  // NOTE: Update this to include the paths to all files that contain Nativewind classes.
  content: ["./App.tsx", "./src/**/*.{js,jsx,ts,tsx}"],
  presets: [require("nativewind/preset")],
  theme: {
    extend: {
      colors: {
        "base-100": "rgb(var(--color-base-100) / <alpha-value>)",
        "base-200": "rgb(var(--color-base-200) / <alpha-value>)",
        "base-300": "rgb(var(--color-base-300) / <alpha-value>)",
        "content-base": "rgb(var(--color-content-base) / <alpha-value>)",
        primary: {
          DEFAULT: "rgb(var(--color-primary) / <alpha-value>)",
          dark: "hsl(from rgb(var(--color-primary)) h s calc(l - 10))",
          darker: "hsl(from rgb(var(--color-primary)) h s calc(l - 20))",
          light: "hsl(from rgb(var(--color-primary)) h s calc(l + 10))",
          lighter: "hsl(from rgb(var(--color-primary)) h s calc(l + 20))",
        },
        "content-primary": "rgb(var(--color-content-primary) / <alpha-value>)",
        secondary: {
          DEFAULT: "rgb(var(--color-secondary) / <alpha-value>)",
          dark: "hsl(from rgb(var(--color-secondary)) h s calc(l - 10))",
          darker: "hsl(from rgb(var(--color-secondary)) h s calc(l - 20))",
          light: "hsl(from rgb(var(--color-secondary)) h s calc(l + 10))",
          lighter: "hsl(from rgb(var(--color-secondary)) h s calc(l + 20))",
        },
        "content-secondary":
          "rgb(var(--color-content-secondary) / <alpha-value>)",
        accent: {
          DEFAULT: "rgb(var(--color-accent) / <alpha-value>)",
          dark: "hsl(from rgb(var(--color-accent)) h s calc(l - 10))",
          darker: "hsl(from rgb(var(--color-accent)) h s calc(l - 20))",
          light: "hsl(from rgb(var(--color-accent)) h s calc(l + 10))",
          lighter: "hsl(from rgb(var(--color-accent)) h s calc(l + 20))",
        },
        "content-accent": "rgb(var(--color-content-accent) / <alpha-value>)",
        neutral: {
          DEFAULT: "rgb(var(--color-neutral) / <alpha-value>)",
          dark: "hsl(from rgb(var(--color-neutral)) h s calc(l - 10))",
          darker: "hsl(from rgb(var(--color-neutral)) h s calc(l - 20))",
          light: "hsl(from rgb(var(--color-neutral)) h s calc(l + 10))",
          lighter: "hsl(from rgb(var(--color-neutral)) h s calc(l + 20))",
        },
        "content-neutral": "rgb(var(--color-content-neutral) / <alpha-value>)",
        info: "rgb(var(--color-info) / <alpha-value>)",
        "content-info": "rgb(var(--color-content-info) / <alpha-value>)",
        success: "rgb(var(--color-success) / <alpha-value>)",
        "content-success": "rgb(var(--color-content-success) / <alpha-value>)",
        warning: "rgb(var(--color-warning) / <alpha-value>)",
        "content-warning": "rgb(var(--color-content-warning) / <alpha-value>)",
        error: "rgb(var(--color-error) / <alpha-value>)",
        "content-error": "rgb(var(--color-content-error) / <alpha-value>)",
        border: "2px",
      },
      borderRadius: {
        selector: "var(--radius-selector)",
        field: "var(--radius-field)",
        box: "var(--radius-box)",
      },
      borderWidth: {
        selector: "var(--border)",
        field: "var(--border)",
        box: "var(--border)",
      },
      height: {
        field: "calc(var(--size-field, .25rem) * 10)",
        selector: "calc(var(--size-selector, .25rem) * 10)",
      },
      ringWidth: {
        selector: "var(--ring)",
        field: "var(--ring)",
        box: "var(--ring)",
      },
      padding: {
        selector: "1rem",
        field: "1rem",
        box: "1rem",
      },
      fontSize: {
        "size-selector": "var(--size-font)",
        "size-field": "var(--size-font)",
        "size-box": "var(--size-font)",
      },
    },
  },
  plugins: [
    ({ addBase }) =>
      addBase({
        ":root": {
          "--color-base-100": "255 247 237",
          "--color-base-200": "254 236 211",
          "--color-base-300": "255 214 167",
          "--color-content-base": "124 40 8",
          "--color-primary": "201 52 0",
          "--color-content-primary": "255 247 237",
          "--color-secondary": "55 10 0",
          "--color-content-secondary": "255 214 167",
          "--color-accent": "140 63 39",
          "--color-content-accent": "255 214 167",
          "--color-neutral": "0 0 0",
          "--color-content-neutral": "255 255 255",
          "--color-info": "25 58 183",
          "--color-content-info": "255 214 167",
          "--color-success": "0 96 68",
          "--color-content-success": "255 214 167",
          "--color-warning": "252 183 0",
          "--color-content-warning": "121 50 5",
          "--color-error": "255 98 102",
          "--color-content-error": "128 21 24",
          "--radius-selector": "2rem",
          "--radius-field": "1rem",
          "--radius-box": "2rem",
          "--size-selector": "0.25rem",
          "--size-field": "0.25rem",
          "--size-font": "0.875rem",
          "--border": "2px",
          "--ring": "4px",
        },
      }),
  ],
};
